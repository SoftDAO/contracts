/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    FlatPriceSale: {
      address: "0xf8C640003A2CA24272eB05a5493e84c62Efc3d9a",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_feeBips",
              type: "uint256",
            },
            {
              internalType: "address payable",
              name: "_feeRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "baseCurrencyValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenValue",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenFee",
              type: "uint256",
            },
          ],
          name: "Buy",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address payable",
              name: "feeRecipient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "feeBips",
              type: "uint256",
            },
          ],
          name: "ImplementationConstructor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "RegisterDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              indexed: false,
              internalType: "struct PaymentTokenInfo",
              name: "paymentTokenInfo",
              type: "tuple",
            },
          ],
          name: "SetPaymentTokenInfo",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
          ],
          name: "Update",
          type: "event",
        },
        {
          inputs: [],
          name: "BASE_CURRENCY_DECIMALS",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "baseCurrency",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "quantity",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "buyWithToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "buyerTotal",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "config",
          outputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "saleMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "userMaximum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseMinimum",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxQueueTime",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "URI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "generatePseudorandomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
          ],
          name: "getFairQueueTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "getOraclePrice",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "getPaymentToken",
          outputs: [
            {
              components: [
                {
                  internalType: "contract IOracleOrL2OracleWithSequencerCheck",
                  name: "oracle",
                  type: "address",
                },
                {
                  internalType: "uint8",
                  name: "decimals",
                  type: "uint8",
                },
              ],
              internalType: "struct PaymentTokenInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "isOpen",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "isOver",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "root",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
            {
              internalType: "bytes32[]",
              name: "proof",
              type: "bytes32[]",
            },
          ],
          name: "isValidMerkleProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "metrics",
          outputs: [
            {
              internalType: "uint256",
              name: "purchaseCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "buyerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "purchaseTotal",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nativeTokenPriceOracle",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "",
              type: "address",
            },
          ],
          name: "paymentTokens",
          outputs: [
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
            {
              internalType: "uint8",
              name: "decimals",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "dest",
              type: "address",
            },
          ],
          name: "payments",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_distributor",
              type: "address",
            },
          ],
          name: "registerDistributor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20Upgradeable",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenQuantity",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "tokenDecimals",
              type: "uint256",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "oracle",
              type: "address",
            },
          ],
          name: "tokensToBaseCurrency",
          outputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
          ],
          name: "update",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "payee",
              type: "address",
            },
          ],
          name: "withdrawPayments",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        buyWithNative: "contracts/sale/v2/Sale.sol",
        buyWithToken: "contracts/sale/v2/Sale.sol",
        buyerTotal: "contracts/sale/v2/Sale.sol",
        isOpen: "contracts/sale/v2/Sale.sol",
        isOver: "contracts/sale/v2/Sale.sol",
        isValidMerkleProof: "contracts/sale/v2/Sale.sol",
        owner: "contracts/sale/v2/Sale.sol",
        renounceOwnership: "contracts/sale/v2/Sale.sol",
        total: "contracts/sale/v2/Sale.sol",
        transferOwnership: "contracts/sale/v2/Sale.sol",
        payments:
          "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol",
        withdrawPayments:
          "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol",
      },
    },
    FlatPriceSaleFactory: {
      address: "0x7b8A7196991fFd1d08ba4b93df7f241767Dfc44d",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "implementation",
              type: "address",
            },
            {
              indexed: true,
              internalType: "contract FlatPriceSale",
              name: "clone",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              indexed: false,
              internalType: "struct Config",
              name: "config",
              type: "tuple",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseCurrency",
              type: "string",
            },
            {
              indexed: false,
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "nativeOracle",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePaymentsEnabled",
              type: "bool",
            },
          ],
          name: "NewSale",
          type: "event",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "implementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              components: [
                {
                  internalType: "address payable",
                  name: "recipient",
                  type: "address",
                },
                {
                  internalType: "bytes32",
                  name: "merkleRoot",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "saleMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userMaximum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "purchaseMinimum",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxQueueTime",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "URI",
                  type: "string",
                },
              ],
              internalType: "struct Config",
              name: "_config",
              type: "tuple",
            },
            {
              internalType: "string",
              name: "_baseCurrency",
              type: "string",
            },
            {
              internalType: "bool",
              name: "_nativePaymentsEnabled",
              type: "bool",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck",
              name: "_nativeTokenPriceOracle",
              type: "address",
            },
            {
              internalType: "contract IERC20Upgradeable[]",
              name: "tokens",
              type: "address[]",
            },
            {
              internalType: "contract IOracleOrL2OracleWithSequencerCheck[]",
              name: "oracles",
              type: "address[]",
            },
            {
              internalType: "uint8[]",
              name: "decimals",
              type: "uint8[]",
            },
          ],
          name: "newSale",
          outputs: [
            {
              internalType: "contract FlatPriceSale",
              name: "sale",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    TrancheVestingMerkleDistributor: {
      address: "0xab276a23b467CfDc86f59C1aF3103E526ebc38a2",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidShortString",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "str",
              type: "string",
            },
          ],
          name: "StringTooLong",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "Adjust",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Claim",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "fromDelegate",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "toDelegate",
              type: "address",
            },
          ],
          name: "DelegateChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "delegate",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "previousBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "DelegateVotesChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "EIP712DomainChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "InitializeDistributionRecord",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "uri",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "fractionDenominator",
              type: "uint256",
            },
          ],
          name: "InitializeDistributor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint8",
              name: "version",
              type: "uint8",
            },
          ],
          name: "Initialized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint160",
              name: "maxDelayTime",
              type: "uint160",
            },
          ],
          name: "SetDelay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "merkleRoot",
              type: "bytes32",
            },
          ],
          name: "SetMerkleRoot",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "SetSweepRecipient",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "SetToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "total",
              type: "uint256",
            },
          ],
          name: "SetTotal",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "time",
              type: "uint128",
            },
            {
              indexed: false,
              internalType: "uint128",
              name: "VestedFraction",
              type: "uint128",
            },
          ],
          name: "SetTranche",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "uri",
              type: "string",
            },
          ],
          name: "SetUri",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "voteFactor",
              type: "uint256",
            },
          ],
          name: "SetVoteFactor",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "SweepToken",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [],
          name: "CLOCK_MODE",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "NAME",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "VERSION",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "int256",
              name: "amount",
              type: "int256",
            },
          ],
          name: "adjust",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint32",
              name: "pos",
              type: "uint32",
            },
          ],
          name: "checkpoints",
          outputs: [
            {
              components: [
                {
                  internalType: "uint32",
                  name: "fromBlock",
                  type: "uint32",
                },
                {
                  internalType: "uint224",
                  name: "votes",
                  type: "uint224",
                },
              ],
              internalType: "struct ERC20Votes.Checkpoint",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalAmount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "claim",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "claimed",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "clock",
          outputs: [
            {
              internalType: "uint48",
              name: "",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          name: "decreaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
          ],
          name: "delegate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "delegatee",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiry",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "delegateBySig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "delegates",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "distancePerSecond",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "eip712Domain",
          outputs: [
            {
              internalType: "bytes1",
              name: "fields",
              type: "bytes1",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "chainId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "verifyingContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
            {
              internalType: "uint256[]",
              name: "extensions",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getClaimableAmount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "getDistributionRecord",
          outputs: [
            {
              components: [
                {
                  internalType: "bool",
                  name: "initialized",
                  type: "bool",
                },
                {
                  internalType: "uint120",
                  name: "total",
                  type: "uint120",
                },
                {
                  internalType: "uint120",
                  name: "claimed",
                  type: "uint120",
                },
              ],
              internalType: "struct DistributionRecord",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getFairDelayTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getFractionDenominator",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getMerkleRoot",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastTotalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "timepoint",
              type: "uint256",
            },
          ],
          name: "getPastVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSweepRecipient",
          outputs: [
            {
              internalType: "address payable",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "i",
              type: "uint256",
            },
          ],
          name: "getTranche",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTranches",
          outputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "time",
              type: "uint256",
            },
          ],
          name: "getVestedFraction",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "getVoteFactor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getVotes",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          name: "increaseAllowance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "_tranches",
              type: "tuple[]",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "index",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "beneficiary",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes32[]",
              name: "merkleProof",
              type: "bytes32[]",
            },
          ],
          name: "initializeDistributionRecord",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "maxDelayTime",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "numCheckpoints",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "v",
              type: "uint8",
            },
            {
              internalType: "bytes32",
              name: "r",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "s",
              type: "bytes32",
            },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "randomValue",
          outputs: [
            {
              internalType: "uint160",
              name: "",
              type: "uint160",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
          ],
          name: "setMerkleRoot",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "_recipient",
              type: "address",
            },
          ],
          name: "setSweepRecipient",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
          ],
          name: "setToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
          ],
          name: "setTotal",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "_tranches",
              type: "tuple[]",
            },
          ],
          name: "setTranches",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
          ],
          name: "setUri",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_voteFactor",
              type: "uint256",
            },
          ],
          name: "setVoteFactor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sweepNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "sweepToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "token",
          outputs: [
            {
              internalType: "contract IERC20",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "total",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "uri",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        CLOCK_MODE: "contracts/claim/factory/TrancheVestingInitializable.sol",
        DOMAIN_SEPARATOR:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        NAME: "contracts/claim/factory/TrancheVestingInitializable.sol",
        VERSION: "contracts/claim/factory/TrancheVestingInitializable.sol",
        adjust: "contracts/claim/factory/TrancheVestingInitializable.sol",
        allowance: "contracts/claim/factory/TrancheVestingInitializable.sol",
        approve: "contracts/claim/factory/TrancheVestingInitializable.sol",
        balanceOf: "contracts/claim/factory/TrancheVestingInitializable.sol",
        checkpoints: "contracts/claim/factory/TrancheVestingInitializable.sol",
        claimed: "contracts/claim/factory/TrancheVestingInitializable.sol",
        clock: "contracts/claim/factory/TrancheVestingInitializable.sol",
        decimals: "contracts/claim/factory/TrancheVestingInitializable.sol",
        decreaseAllowance:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        delegate: "contracts/claim/factory/TrancheVestingInitializable.sol",
        delegateBySig:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        delegates: "contracts/claim/factory/TrancheVestingInitializable.sol",
        distancePerSecond:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        eip712Domain: "contracts/claim/factory/TrancheVestingInitializable.sol",
        getClaimableAmount:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getDistributionRecord:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getFairDelayTime:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getFractionDenominator:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getPastTotalSupply:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getPastVotes: "contracts/claim/factory/TrancheVestingInitializable.sol",
        getSweepRecipient:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getTotalVotes:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getTranche: "contracts/claim/factory/TrancheVestingInitializable.sol",
        getTranches: "contracts/claim/factory/TrancheVestingInitializable.sol",
        getVestedFraction:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getVoteFactor:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        getVotes: "contracts/claim/factory/TrancheVestingInitializable.sol",
        increaseAllowance:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        maxDelayTime: "contracts/claim/factory/TrancheVestingInitializable.sol",
        name: "contracts/claim/factory/TrancheVestingInitializable.sol",
        nonces: "contracts/claim/factory/TrancheVestingInitializable.sol",
        numCheckpoints:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        owner: "contracts/claim/factory/TrancheVestingInitializable.sol",
        permit: "contracts/claim/factory/TrancheVestingInitializable.sol",
        randomValue: "contracts/claim/factory/TrancheVestingInitializable.sol",
        renounceOwnership:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        setSweepRecipient:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        setToken: "contracts/claim/factory/TrancheVestingInitializable.sol",
        setTotal: "contracts/claim/factory/TrancheVestingInitializable.sol",
        setTranches: "contracts/claim/factory/TrancheVestingInitializable.sol",
        setUri: "contracts/claim/factory/TrancheVestingInitializable.sol",
        setVoteFactor:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        sweepNative: "contracts/claim/factory/TrancheVestingInitializable.sol",
        sweepToken: "contracts/claim/factory/TrancheVestingInitializable.sol",
        symbol: "contracts/claim/factory/TrancheVestingInitializable.sol",
        token: "contracts/claim/factory/TrancheVestingInitializable.sol",
        total: "contracts/claim/factory/TrancheVestingInitializable.sol",
        totalSupply: "contracts/claim/factory/TrancheVestingInitializable.sol",
        transfer: "contracts/claim/factory/TrancheVestingInitializable.sol",
        transferFrom: "contracts/claim/factory/TrancheVestingInitializable.sol",
        transferOwnership:
          "contracts/claim/factory/TrancheVestingInitializable.sol",
        uri: "contracts/claim/factory/TrancheVestingInitializable.sol",
        getMerkleRoot: "contracts/claim/factory/MerkleSetInitializable.sol",
      },
    },
    TrancheVestingMerkleDistributorFactory: {
      address: "0x5Bc44bCfa7f922096A7B5526ee0266f801FfE9a7",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "implementation",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "distributor",
              type: "address",
            },
          ],
          name: "DistributorDeployed",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "_tranches",
              type: "tuple[]",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "deployDistributor",
          outputs: [
            {
              internalType: "contract TrancheVestingMerkleDistributor",
              name: "distributor",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "distributors",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getImplementation",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "contract IERC20",
              name: "_token",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_total",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_uri",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "uint128",
                  name: "time",
                  type: "uint128",
                },
                {
                  internalType: "uint128",
                  name: "vestedFraction",
                  type: "uint128",
                },
              ],
              internalType: "struct Tranche[]",
              name: "_tranches",
              type: "tuple[]",
            },
            {
              internalType: "bytes32",
              name: "_merkleRoot",
              type: "bytes32",
            },
            {
              internalType: "uint160",
              name: "_maxDelayTime",
              type: "uint160",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
          ],
          name: "predictDistributorAddress",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
